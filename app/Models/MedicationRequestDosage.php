<?php

namespace App\Models;

use App\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;

class MedicationRequestDosage extends Model
{
    public const DURATION_UNIT_SYSTEM = 'http://unitsofmeasure.org';
    public const DURATION_UNIT_CODE = ['s', 'min', 'h', 'd', 'wk', 'mo', 'a'];
    public const DURATION_UNIT_DISPLAY = ["s" => "second", "min" => "minute", "h" => "hour", "d" => "day", "wk" => "week", "mo" => "month", "a" => "year"];

    public const REPEAT_WHEN_SYSTEM = ['MORN' => 'http://hl7.org/fhir/event-timing', 'MORN.early' => 'http://hl7.org/fhir/event-timing', 'MORN.late' => 'http://hl7.org/fhir/event-timing', 'NOON' => 'http://hl7.org/fhir/event-timing', 'AFT' => 'http://hl7.org/fhir/event-timing', 'AFT.early' => 'http://hl7.org/fhir/event-timing', 'AFT.late' => 'http://hl7.org/fhir/event-timing', 'EVE' => 'http://hl7.org/fhir/event-timing', 'EVE.early' => 'http://hl7.org/fhir/event-timing', 'EVE.late' => 'http://hl7.org/fhir/event-timing', 'NIGHT' => 'http://hl7.org/fhir/event-timing', 'PHS' => 'http://hl7.org/fhir/event-timing', 'HS' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'WAKE' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'C' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'CM' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'CD' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'CV' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'AC' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'ACM' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'ACD' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'ACV' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'PC' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'PCM' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'PCD' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', 'PCV' => 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent'];
    public const REPEAT_WHEN_CODE = ['MORN', 'MORN.early', 'MORN.late', 'NOON', 'AFT', 'AFT.early', 'AFT.late', 'EVE', 'EVE.early', 'EVE.late', 'NIGHT', 'PHS', 'HS', 'WAKE', 'C', 'CM', 'CD', 'CV', 'AC', 'ACM', 'ACD', 'ACV', 'PC', 'PCM', 'PCD', 'PCV'];
    public const REPEAT_WHEN_DISPLAY = ["MORN" => "Morning", "MORN.early" => "Early Morning", "MORN.late" => "Late Morning", "NOON" => "Noon", "AFT" => "Afternoon", "AFT.early" => "Early Afternoon", "AFT.late" => "Late Afternoon", "EVE" => "Evening", "EVE.early" => "Early Evening", "EVE.late" => "Late Evening", "NIGHT" => "Night", "PHS" => "After Sleep", "HS" => "HS", "WAKE" => "WAKE", "C" => "C", "CM" => "CM", "CD" => "CD", "CV" => "CV", "AC" => "AC", "ACM" => "ACM", "ACD" => "ACD", "ACV" => "ACV", "PC" => "PC", "PCM" => "PCM", "PCD" => "PCD", "PCV" => "PCV"];
    public const REPEAT_WHEN_DEFINITION = ["MORN" => "Pagi hari", "MORN.early" => "Early Morning", "MORN.late" => "Late Morning", "NOON" => "Sekitar pukul 12.00", "AFT" => "Sore hari", "AFT.early" => "Early Afternoon", "AFT.late" => "Late Afternoon", "EVE" => "Malam hari", "EVE.early" => "Early Evening", "EVE.late" => "Late Evening", "NIGHT" => "Malam hari", "PHS" => "Setelah tidur", "HS" => "Sebelum tidur", "WAKE" => "Setelah bangun tidur", "C" => "Saat makan", "CM" => "Saat sarapan", "CD" => "Saat makan siang", "CV" => "Saat makan malam", "AC" => "Sebelum makan", "ACM" => "Sebelum sarapan", "ACD" => "Sebelum makan siang", "ACV" => "Sebelum makan malam", "PC" => "Setelah makan", "PCM" => "Setelah sarapan", "PCD" => "Setelah makan siang", "PCV" => "Setelah makan malam"];

    public const TIMING_CODE_SYSTEM = 'http://terminology.hl7.org/3.1.0/CodeSystem-v3-GTSAbbreviation.html';
    public const TIMING_CODE_CODE = ['BID', 'TID', 'QID', 'AM', 'PM', 'QD', 'QOD', 'Q1H', 'Q2H', 'Q3H', 'Q4H', 'Q6H', 'Q8H', 'BED', 'WK', 'MO'];
    public const TIMING_CODE_DISPLAY = ["BID" => "BID", "TID" => "TID", "QID" => "QID", "AM" => "AM", "PM" => "PM", "QD" => "QD", "QOD" => "QOD", "Q1H" => "Every hour", "Q2H" => "Every 2 hours", "Q3H" => "Every 3 hours", "Q4H" => "Q4H", "Q6H" => "Q6H", "Q8H" => "every 8 hours", "BED" => "at bedtime", "WK" => "weekly", "MO" => "monthly"];
    public const TIMING_CODE_DEFINITION = ["BID" => "2 kali sehari berdasarkan waktu di fasilitas kesehatan.", "TID" => "3 kali sehari berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "QID" => "4 kali sehari berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "AM" => "Setiap pagi berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "PM" => "Setiap siang berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "QD" => "Setiap hari berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "QOD" => "Setiap hari lain berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q1H" => "Setiap jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q2H" => "Setiap 2 jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q3H" => "Setiap 3 jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q4H" => "Setiap 4 jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q6H" => "Setiap 6 jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "Q8H" => "Setiap 8 jam berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "BED" => "Waktu tidur (berdasarkan waktu yang ditentukan oleh fasilitas kesehatan).", "WK" => "Seminggu sekali berdasarkan waktu yang ditentukan oleh fasilitas kesehatan.", "MO" => "Sebulan sekali berdasarkan waktu yang ditentukan oleh fasilitas kesehatan."];

    public const ROUTE_SYSTEM = 'http://www.whocc.no/atc';
    public const ROUTE_CODE = ['implant', 'Inhal', 'Instill', 'N', 'O', 'P', 'R', 'SL', 'TD', 'V', 'Inhal.powder', 'Inhal.aerosol', 'Inhal.solution', 'urethral', 'TD patch', 'intravesical', 'Instill.solution', 'lamella', 'oral aerosol', 's.c. implant', 'ocular', 'otic', 'cutaneous', 'inj.subcutaneous', 'inj.intramuscular', 'inj.intravenous', 'inj.intrathecal', 'Chewing Gum', 'ointment', 'stomatologic'];
    public const ROUTE_DISPLAY = ["implant" => "Implant", "Inhal" => "Inhalation", "Instill" => "Instillation", "N" => "Nasal", "O" => "Oral", "P" => "Parenteral", "R" => "Rectal", "SL" => "Sublingual/Buccal/Oro mucosal", "TD" => "Transdermal", "V" => "Vaginal", "Inhal.powder" => "Inhalation Powder", "Inhal.aerosol" => "Inhalation Aerosol", "Inhal.solution" => "Inhalation Solution", "urethral" => "Urethral", "TD patch" => "Transdermal Patch", "intravesical" => "Intravesical", "Instill.solution" => "Instillation Solution", "lamella" => "Lamella", "oral aerosol" => "Oral Aerosol", "s.c. implant" => "S.C. Implant", "ocular" => "Ocular", "otic" => "Otic", "cutaneous" => "Cutaneous", "inj.subcutaneous" => "Injection Subcutaneous", "inj.intramuscular" => "Injection Intramuscular", "inj.intravenous" => "Injection Intravenous", "inj.intrathecal" => "Injection Intrathecal", "Chewing Gum" => "Chewing Gum", "ointment" => "Ointment", "stomatologic" => "stomatologic"];
    public const ROUTE_DEFINITION = ["implant" => "Implant", "Inhal" => "Inhalasi (dihirup)", "Instill" => "Instillation", "N" => "Nasal", "O" => "Oral", "P" => "Parenteral", "R" => "Rektum", "SL" => "Sublingual (di bawah lidah) / bukal (diantara gusi & pipi)", "TD" => "Transdermal", "V" => "Vagina", "Inhal.powder" => "Bubuk inhalasi", "Inhal.aerosol" => "Aerosol inhalasi", "Inhal.solution" => "Larutan inhalasi", "urethral" => "Uretra", "TD patch" => "Transdermal patch", "intravesical" => "Intravesical", "Instill.solution" => "Instillation solution", "lamella" => "Ophtalmic", "oral aerosol" => "Aerosol oral", "s.c. implant" => "S.C. implant", "ocular" => "Ocular (mata)", "otic" => "Otic (telinga)", "cutaneous" => "Kutanea (kulit)", "inj.subcutaneous" => "Subkutan Injeksi (di bawah kulit)", "inj.intramuscular" => "Intramuskular Injeksi (di dalam otot)", "inj.intravenous" => "Intravena Injeksi (ke pembuluh darah)", "inj.intrathecal" => "Intratekal Injeksi (sekitar sumsum tulang belakang)", "Chewing Gum" => "Dikunyah", "ointment" => "Topikal", "stomatologic" => "stomatologic"];

    public const METHOD_SYSTEM = 'http://snomed.info/sct';
    public const METHOD_CODE = ['769410007', '769409002', '769408005', '769407000', '769364006', '422327006', '422219000', '422152000', '422145002', '422114001', '422106007', '422033008', '421994004', '421984009', '421939007', '421832002', '421829000', '421805007', '421803000', '421769005', '421723005', '421718005', '421682005', '421612001', '421548005', '421538008', '421521009', '421484000', '421463005', '421399004', '421298005', '421286000', '421257003', '421206002', '421139008', '421134003', '421067001', '421066005', '421035004', '420974001', '420942008', '420883007', '420806001', '420771004', '420652005', '420620005', '420606003', '420604000', '420561004', '420503003', '420484009', '420360002', '420341009', '420295001', '420247005', '420246001', '420045007', '419747000', '419652001', '419582001', '419385000', '418283001', '417924000'];
    public const METHOD_DISPLAY = ["769410007" => "Repeatedly", "769409002" => "Deeply", "769408005" => "Completely", "769407000" => "Thoroughly", "769364006" => "Medication container empty", "422327006" => "Then stop", "422219000" => "Sprinkle", "422152000" => "Wash", "422145002" => "Inject", "422114001" => "Once", "422106007" => "Add", "422033008" => "Divide", "421994004" => "During", "421984009" => "Until finished", "421939007" => "Follow", "421832002" => "Twice", "421829000" => "And", "421805007" => "Swish", "421803000" => "If", "421769005" => "Follow directions", "421723005" => "Now", "421718005" => "Before", "421682005" => "Dissolve", "421612001" => "Every", "421548005" => "Until", "421538008" => "Instill", "421521009" => "Swallow", "421484000" => "Then discontinue", "421463005" => "With", "421399004" => "Dilute - dosing instruction imperative", "421298005" => "Swish and swallow", "421286000" => "Discontinue", "421257003" => "Insert", "421206002" => "Multiply", "421139008" => "Hold", "421134003" => "Inhale", "421067001" => "Then", "421066005" => "Place", "421035004" => "To", "420974001" => "When", "420942008" => "Call", "420883007" => "Sparingly", "420806001" => "Per", "420771004" => "Upon", "420652005" => "Until gone", "420620005" => "Push", "420606003" => "Shampoo", "420604000" => "Finish", "420561004" => "Or", "420503003" => "As", "420484009" => "Subtract - dosing instruction fragment", "420360002" => "Sniff", "420341009" => "Constant", "420295001" => "Only", "420247005" => "Dosing instruction imperative", "420246001" => "At", "420045007" => "Suck", "419747000" => "Chew", "419652001" => "Take", "419582001" => "Give", "419385000" => "Use", "418283001" => "Administer", "417924000" => "Apply"];
    public const METHOD_DEFINITION = ["769410007" => "Repeatedly - dosing instruction fragment (qualifier value)", "769409002" => "Deeply - dosing instruction fragment (qualifier value)", "769408005" => "Completely - dosing instruction fragment (qualifier value)", "769407000" => "Thoroughly - dosing instruction fragment (qualifier value)", "769364006" => "Medication container empty (qualifier value)", "422327006" => "Then stop - dosing instruction fragment (qualifier value)", "422219000" => "Sprinkle - dosing instruction imperative (qualifier value)", "422152000" => "Wash - dosing instruction imperative (qualifier value)", "422145002" => "Inject - dosing instruction imperative (qualifier value)", "422114001" => "Once - dosing instruction fragment (qualifier value)", "422106007" => "Add - dosing instruction fragment (qualifier value)", "422033008" => "Divide - dosing instruction fragment (qualifier value)", "421994004" => "During - dosing instruction fragment (qualifier value)", "421984009" => "Until finished - dosing instruction fragment (qualifier value)", "421939007" => "Follow - dosing instruction imperative (qualifier value)", "421832002" => "Twice - dosing instruction fragment (qualifier value)", "421829000" => "And - dosing instruction fragment (qualifier value)", "421805007" => "Swish - dosing instruction imperative (qualifier value)", "421803000" => "If - dosing instruction fragment (qualifier value)", "421769005" => "Follow directions (qualifier value)", "421723005" => "Now - dosing instruction fragment (qualifier value)", "421718005" => "Before - dosing instruction fragment (qualifier value)", "421682005" => "Dissolve - dosing instruction imperative (qualifier value)", "421612001" => "Every - dosing instruction fragment (qualifier value)", "421548005" => "Until - dosing instruction fragment (qualifier value)", "421538008" => "Instill - dosing instruction imperative (qualifier value)", "421521009" => "Swallow - dosing instruction imperative (qualifier value)", "421484000" => "Then discontinue - dosing instruction fragment (qualifier value)", "421463005" => "With - dosing instruction fragment (qualifier value)", "421399004" => "Dilute - dosing instruction imperative (qualifier value)", "421298005" => "Swish and swallow - dosing instruction imperative (qualifier value)", "421286000" => "Discontinue - dosing instruction imperative (qualifier value)", "421257003" => "Insert - dosing instruction imperative (qualifier value)", "421206002" => "Multiply - dosing instruction fragment (qualifier value)", "421139008" => "Hold - dosing instruction fragment (qualifier value)", "421134003" => "Inhale - dosing instruction imperative (qualifier value)", "421067001" => "Then - dosing instruction fragment (qualifier value)", "421066005" => "Place - dosing instruction imperative (qualifier value)", "421035004" => "To - dosing instruction fragment (qualifier value)", "420974001" => "When - dosing instruction fragment (qualifier value)", "420942008" => "Call - dosing instruction fragment (qualifier value)", "420883007" => "Sparingly - dosing instruction fragment (qualifier value)", "420806001" => "Per - dosing instruction fragment (qualifier value)", "420771004" => "Upon - dosing instruction fragment (qualifier value)", "420652005" => "Until gone - dosing instruction fragment (qualifier value)", "420620005" => "Push - dosing instruction imperative (qualifier value)", "420606003" => "Shampoo - dosing instruction imperative (qualifier value)", "420604000" => "Finish - dosing instruction imperative (qualifier value)", "420561004" => "Or - dosing instruction fragment (qualifier value)", "420503003" => "As - dosing instruction fragment (qualifier value)", "420484009" => "Subtract - dosing instruction fragment (qualifier value)", "420360002" => "Sniff - dosing instruction imperative (qualifier value)", "420341009" => "Constant - dosing instruction fragment (qualifier value)", "420295001" => "Only - dosing instruction fragment (qualifier value)", "420247005" => "Dosing instruction imperative (qualifier value)", "420246001" => "At - dosing instruction fragment (qualifier value)", "420045007" => "Suck - dosing instruction imperative (qualifier value)", "419747000" => "Chew - dosing instruction imperative (qualifier value)", "419652001" => "Take - dosing instruction imperative (qualifier value)", "419582001" => "Give - dosing instruction imperative (qualifier value)", "419385000" => "Use - dosing instruction imperative (qualifier value)", "418283001" => "Administer - dosing instruction imperative (qualifier value)", "417924000" => "Apply - dosing instruction imperative (qualifier value)"];

    protected $table = 'medication_request_dosage';
    protected $casts = [
        'timing_event' => 'json',
        'timing_repeat' => 'json',
        'max_dose_per_period_numerator_value' => 'decimal:2',
        'max_dose_per_period_denominator_value' => 'decimal:2',
        'max_dose_per_administration_value' => 'decimal:2',
        'max_dose_per_lifetime_value' => 'decimal:2'
    ];
    public $timestamps = false;

    public function medicationRequest(): BelongsTo
    {
        return $this->belongsTo(MedicationRequest::class, 'med_req_id');
    }

    public function additionalInstruction(): HasMany
    {
        return $this->hasMany(MedicationRequestDosageAdditionalInstruction::class, 'med_req_dosage_id');
    }

    public function doseRate(): HasMany
    {
        return $this->hasMany(MedicationRequestDosageDoseRate::class, 'med_req_dosage_id');
    }
}
